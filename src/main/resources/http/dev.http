
### Test API health
GET {{url}}/auth/test


### Register new user
POST {{url}}/auth/register
Content-Type: application/json

{
  "name": "Test User",
  "email": "user@user.dk",
  "password": "user123",
  "roleType": "USER"
}

> {% client.global.set("auth_token", response.body.token); %}


### Login user
POST {{url}}/auth/login
Content-Type: application/json

{
  "email": "user@user.dk",
  "password": "user123"
}

> {% client.global.set("auth_token", response.body.token); %}




### Login user
POST {{url}}/auth/login
Content-Type: application/json

{
  "email": "test@admin.dk",
  "password": "test123"
}

> {% client.global.set("auth_token", response.body.token); %}


### Add admin role to user
POST {{url}}/auth/user/addrole
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "role": "ADMIN"
}

### Reset token
GET {{url}}/auth/test/

> {%
    client.global.set("jwt_token", null);
    console.log("JWT Token:", client.global.get("jwt_token"));
%}



### Test protected user endpoint
GET {{url}}/protected/user_demo
Authorization: Bearer {{auth_token}}

### Test protected admin endpoint
GET {{url}}/protected/admin_demo
Authorization: Bearer {{auth_token}}


### Get all stores (public)
GET {{url}}/stores
Accept: application/json



### Get specific store (user)
GET {{url}}/stores/19
Authorization: Bearer {{auth_token}}
Accept: application/json


### Get stores by postal code (public)
GET {{url}}/stores/postal_code/2300
Accept: application/json

### Get user's favorite stores (requires auth)
GET {{url}}/stores/favorites
Authorization: Bearer {{auth_token}}
Accept: application/json

### Add store to favorites (requires auth)
POST {{url}}/stores/19/favorite
Authorization: Bearer {{auth_token}}
Accept: application/json

### Remove store from favorites (requires auth)
DELETE {{url}}/stores/19/favorite
Authorization: Bearer {{auth_token}}
Accept: application/json

### Full test flow for favorites
# 1. First check store is not favorite
GET {{url}}/stores/19
Authorization: Bearer {{auth_token}}
Accept: application/json

###
# 2. Add to favorites
POST {{url}}/stores/51/favorite
Authorization: Bearer {{auth_token}}
Accept: application/json

###
# 3. Verify store is now favorite
GET {{url}}/stores/22
Authorization: Bearer {{auth_token}}
Accept: application/json

###
# 4. Get all favorite stores
GET {{url}}/stores/favorites
Authorization: Bearer {{auth_token}}
Accept: application/json

###
# 5. Remove from favorites
DELETE {{url}}/stores/51/favorite
Authorization: Bearer {{auth_token}}
Accept: application/json

###
# 6. Verify store is no longer favorite
GET {{url}}/stores/49
Authorization: Bearer {{auth_token}}
Accept: application/json

###
# 6. Verify store is no longer favorite
GET {{url}}/stores/49
Accept: application/json